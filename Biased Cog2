BiasedCog2.java:
package prismaticmod.cards;

import com.megacrit.cardcrawl.actions.common.ApplyPowerAction;
import com.megacrit.cardcrawl.actions.defect.BarrageAction;
import com.megacrit.cardcrawl.cards.DamageInfo;
import com.megacrit.cardcrawl.characters.AbstractPlayer;
import com.megacrit.cardcrawl.monsters.AbstractMonster;
import com.megacrit.cardcrawl.powers.DexterityPower;
import com.megacrit.cardcrawl.powers.FocusPower;
import com.megacrit.cardcrawl.powers.StrengthPower;
import prismaticmod.powers.BiasedCog2Power;
import prismaticmod.powers.ChimeraPower;
import prismaticmod.util.CardStats;
import theprismatic.ThePrismatic;

public class BiasedCog2 extends BaseCard {
    public static final String ID = makeID("Biased Cognition"); //makeID adds the mod ID, so the final ID will be something like "modID:MyCard"
    private static final CardStats info = new CardStats(
            ThePrismatic.Enums.Blue, //The card color. If you're making your own character, it'll look something like this. Otherwise, it'll be CardColor.RED or something similar for a basegame character color.
            CardType.POWER, //The type. ATTACK/SKILL/POWER/CURSE/STATUS
            CardRarity.RARE, //Rarity. BASIC is for starting cards, then there's COMMON/UNCOMMON/RARE, and then SPECIAL and CURSE. SPECIAL is for cards you only get from events. Curse is for curses, except for special curses like Curse of the Bell and Necronomicurse.
            CardTarget.SELF, //The target. Single target is ENEMY, all enemies is ALL_ENEMY. Look at cards similar to what you want to see what to use.
            1 //The card's base cost. -1 is X cost, -2 is no cost for unplayable cards like curses, or Reflex.
    );

    public BiasedCog2() {
        super(ID, info); //Pass the required information to the BaseCard constructor.
        //These will be used in the constructor. Technically you can just use the values directly,
        //but constants at the top of the file are easy to adjust.
        int baseMagicNumber = 4;
        int UPG_Number = 1;
        setMagic(baseMagicNumber, UPG_Number);
    }
    
    @Override
    public void use(AbstractPlayer p, AbstractMonster m) {
        addToBot(new ApplyPowerAction(p, p, new FocusPower(p, magicNumber), magicNumber));
        addToBot(new ApplyPowerAction(p, p, new StrengthPower(p, magicNumber), magicNumber));
        addToBot(new ApplyPowerAction(p, p, new BiasedCog2Power(1), 1));
    }
}



BiasedCog2Power.java:
package prismaticmod.powers;
import com.megacrit.cardcrawl.actions.common.ApplyPowerAction;
//import com.megacrit.cardcrawl.powers.StrengthPower;
import static com.megacrit.cardcrawl.dungeons.AbstractDungeon.player;
import static prismaticmod.BasicMod.makeID;
import com.megacrit.cardcrawl.powers.StrengthPower;
import com.megacrit.cardcrawl.powers.FocusPower;

public class BiasedCog2Power extends BasePower {

    public static final String ID = makeID("Bias");
    private int amount;
    public BiasedCog2Power(int amount) {
        super(ID, PowerType.DEBUFF, false, player, player, amount, true);
        this.amount = amount;
    }

    public void updateDescription() {
        this.description = DESCRIPTIONS[0] + this.amount + DESCRIPTIONS[1] + this.amount + DESCRIPTIONS[2];
    }

    public void stackPower(int stackAmount) {
        this.fontScale = 8.0F;
        this.amount += stackAmount;
    }

    public void atStartOfTurn() {
        flash();
        addToBot(new ApplyPowerAction(this.owner, this.owner, new StrengthPower(this.owner, -this.amount), -this.amount));
        addToBot(new ApplyPowerAction(this.owner, this.owner, new FocusPower(this.owner, -this.amount), -this.amount));
    }
}



CardStrings:
  "${modID}:Biased Cognition": {
    "NAME": "Biased Cognition",
    "DESCRIPTION": "Gain !M! Focus and !M! Strength.\nAt the start of your turn, lose 1 Focus and 1 Strength."
  }

PowerStrings (which DOESN'T seem to work):
  "${modID}:Biased Cognition": {
    "NAME": "Biased Cognition",
    "DESCRIPTIONS": [
      "At the start of your turn, lose #b",
      "#yFocus and #b",
      "#yStrength."
    ]
  }
